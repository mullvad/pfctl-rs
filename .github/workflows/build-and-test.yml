---
name: Build and test
on:
  pull_request:
    paths:
      - '**/*.rs'
      - Cargo.toml
      - Cargo.lock
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: --deny warnings

jobs:
# Enable this after fixing all the stuff clippy complains about
#  linting:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions-rs/toolchain@v1
#        with:
#          profile: minimal
#          toolchain: stable
#          components: clippy
#          default: true
#      - name: Lint (clippy)
#        uses: actions-rs/clippy-check@v1
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}

  build-and-test:
    strategy:
      matrix:
        rust: [stable, beta, nightly, 1.56.0]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #v1.0.7
        with:
          toolchain: ${{ matrix.rust }}
          profile: minimal
          default: true

      - name: Build
        run: cargo build --all-targets

      - name: Test
        # Since the tests modify global state (the system firewall) they cannot run in parallel.
        # The integration tests must run as root since they write firewall state (/dev/pf)
        run: sudo cargo test -- --test-threads=1

  minimal-versions:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@16499b5e05bf2e26879000db0c1d13f7e13fa3af #v1.0.7
        with:
          toolchain: nightly
          profile: minimal
          default: true

      - name: Downgrade dependencies to minimal versions
        run: cargo +nightly update -Z minimal-versions

      # Make sure the library builds with all dependencies downgraded to their
      # oldest versions allowed by the semver spec. This ensures we have not
      # under-specified any dependency
      - name: Compile with minimal versions
        run: cargo build --all-targets
